match.fun("sum")
a <- match.fun("sum")
a
a(1:3)
a <- function(x) list(x, x^2, 3)
a(2)
a <- function(x) c(x, x^2, 3)
a(2)
?mclust::Mclust
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("build-package.R")
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("is_kmeans_doing_well.R")
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("build-package.R")
source("is_kmeans_doing_well.R")
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("is_kmeans_doing_well.R")
result.fanny
result.fanny@clusterObjs$model$`24`
str(result.fanny@clusterObjs$model$`24`)
str(result.fanny@clusterObjs$model$`24`$classification)
result.fanny@clusterObjs$model$`24`$classification
result.fanny@clusterObjs$model$`24`$classification == 4
sum(result.fanny@clusterObjs$model$`24`$classification == 4)
?kohonen::som
?kohonen::somgrid
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("is_kmeans_doing_well.R")
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("is_kmeans_doing_well.R")
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("is_kmeans_doing_well.R")
result.som@clusterObjs$som$`24`$unit.classif
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
setwd("G:/Mi unidad/WHY/Github/clValid2/clValid2/scripts")
source("is_kmeans_doing_well.R")
?cluster::clara
source("is_kmeans_doing_well.R")
View(result.clara)
?clvalid::sota
?clValid::sota
load("G:/Mi unidad/WHY/Analyses/clValid/data/o_14111.clValid")
o
plot(o@clusterObjs$hierarchical)
o@clusterObjs$hierarchical
o@clusterObjs$hierarchical$height
max(o@clusterObjs$hierarchical$height)
hier.k2 <- cutree(o@clusterObjs$hierarchical, k = 2)
sum(hier.k2 == 1)
sum(hier.k2 == 2)
sum(hier.k2 == 3)
hier.k2
hier.k100 <- cutree(o@clusterObjs$hierarchical, k = 100)
sum(hier.k100 == 1)
sum(hier.k100 == 2)
sum(hier.k100 == 3)
sum(hier.k100 == 4)
sum(hier.k100 == 5)
sum(hier.k100 == 6)
sum(hier.k100 == 7)
sum(hier.k100 == 8)
sum(hier.k100 == 9)
tapply(1:100, function(x) sum(hier.k100 == x))
sapply(1:100, function(x) sum(hier.k100 == x))
hier.k100 == 6
which(hier.k100 == 6)
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
elems_per_cl <- which(hier.k100 == 6)
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
this_name
str_split(this_name, "_")
stringr::str_split(this_name, "_")
folder_file <- stringr::str_split(this_name, "_")
folder[[1]]
folder_file[[1]]
folder_file[[1]][1]
folder_file[1[1]
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
folder_file[1][1]
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
folder_file[1][1]
folder_file[[1]][1]
paste0("G:/Mi unidad/WHY/Datasets/", folder_file[[1]][1], "/ext/",
folder_file[[1]][2], ".RData")
load(paste0("G:/Mi unidad/WHY/Datasets/", folder_file[[1]][1], "/ext/",
folder_file[[1]][2], ".RData"))
edf$df
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/is_an_outlier.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
dim(feats)
dim(feats)[1]
?foreach
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
dset_path
load(dset_path)
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
dset_path
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
dset_path
edf$df
head(edf$df)
edf$df$values
sum(edf$df$values)
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
feats$overall_days[x]
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/new_feats_to_detect_outliers.R')
paste0(out_dir, feats$data_set[x], "_", feats$file[x], ".png")
source('G:/Mi unidad/WHY/Github/why-T2.1/_analyses/daylight_saving_dataset_correction.R')
dset_path
edf
edf$df
edf$df$times
edf$df$times
head(edf$df$times)
dset_path
dates <- as.POSIXct(edf$df$times, tz = "CET")
dates
dates <- as.POSIXct(edf$df$times, tz = "CET")
dates <- as.POSIXct(edf$df$times, tz = "CET")
dates
dates <- as.POSIXct(edf$df$times, tz = "CET")
dates
dates
dates <- as.POSIXct(edf$df$times, tz = "CETS")
dates
dates <- as.POSIXct(edf$df$times, tz = "UTC+1")
dates
dates <- as.POSIXct(edf$df$times)
dates
dates <- as.POSIXct(edf$df$times, tz = "Europe/Dublin")
dates
install.packages("NbClust")
set.seed(1)
x<-rbind(matrix(rnorm(100,sd=0.1),ncol=2),
matrix(rnorm(100,mean=1,sd=0.2),ncol=2),
matrix(rnorm(100,mean=5,sd=0.1),ncol=2),
matrix(rnorm(100,mean=7,sd=0.2),ncol=2))
res<-NbClust(x, distance = "euclidean", min.nc=2, max.nc=8,
method = "complete", index = "ch")
library(NbClust)
set.seed(1)
x<-rbind(matrix(rnorm(100,sd=0.1),ncol=2),
matrix(rnorm(100,mean=1,sd=0.2),ncol=2),
matrix(rnorm(100,mean=5,sd=0.1),ncol=2),
matrix(rnorm(100,mean=7,sd=0.2),ncol=2))
res<-NbClust(x, distance = "euclidean", min.nc=2, max.nc=8,
method = "complete", index = "ch")
res
res<-NbClust(x, distance = "euclidean", min.nc=2, max.nc=12, method = "complete", index = "ch")
res
data<-iris[,-c(5)]
res<-NbClust(data, diss=NULL, distance = "euclidean", min.nc=2, max.nc=6,
method = "ward.D2", index = "kl")
res
res<-NbClust(data, diss=NULL, distance = "euclidean", min.nc=2, max.nc=6,
method = "kmeans", index = "hubert")
res$All.index
res<-NbClust(data, diss=NULL, distance = "manhattan", min.nc=2, max.nc=6,
method = "complete", index = "all")
res$All.index
res$Best.nc
res$All.CriticalValues
res$Best.partition
res<-NbClust(data, diss=NULL, distance = "manhattan", min.nc=2, max.nc=6, method = "kmeans", index = "all")
res$Best.partition
res
res<-NbClust(data, diss=NULL, distance = "manhattan", min.nc=2, max.nc=6, method = "complete", index = "all")
res
res
res
source('G:/Mi unidad/WHY/Features/other_files/build_v1.12.R')
feats11$file == new_feats$file
all(feats11$file == new_feats$file  )
source('G:/Mi unidad/WHY/Features/other_files/build_v1.12.R')
source('G:/Mi unidad/WHY/Features/other_files/build_v1.12.R')
feats12$sum_per_day
source('G:/Mi unidad/WHY/Features/other_files/build_v1.12.R')
feats12$sum_per_day
min(feats12$sum_per_day)
sort(feats12$sum_per_day)
sum(feats12$sum_per_day < 1E-3)
feats12$file[feats12$sum_per_day < 1E-3)]
feats12$file[feats12$sum_per_day < 1E-3]
feats12$file[feats12$sum_per_day < 5E-3]
sort(feats12$file[feats12$sum_per_day < 5E-3])
sort(feats12$file[feats12$sum_per_day < 1E-2])
sort(feats12$file[feats12$sum_per_day < 5E-2])
sort(feats12$file[feats12$sum_per_day < 1E-1])
min(feats12$sum_per_day < 5E-2)
min(feats12$sum_per_day)
sort(feats12$sum_per_day)
sort(feats12$sum)
mean(feats12$sum)
decile(feats12$sum)
quartile(feats12$sum)
quantile(feats12$sum)
quantile(feats12$sum, n=10)
quantile(feats12$sum, seq(0,1,0.05))
quantile(feats12$sum_per_day, seq(0,1,0.05))
quantile(feats12$sum_per_day, seq(0,0.05,0.001))
sum(feats12$sum_per_day < 1E-1)
sum(feats12$sum_per_day < 5E-1)
sum(feats12$sum_per_day < 1)
sort(feats12$file[feats12$sum_per_day < 1])
feats12$file[feats12$sum_per_day < 1]
feats12$file[feats12$sum < 100]
feats12$file[sort(feats12$sum) < 100]
feats12$file[feats12$sum < 100]
feats12$file[feats12$sum < 50]
feats12$file[feats12$sum < 100 & feats12$sum_per_day < 1]
feats12$file[feats12$sum < 100 & feats12$sum_per_day < 0.1]
feats12$file[feats12$sum < 100 & feats12$sum_per_day < 1]
feats12$file[feats12$sum < 100 & feats12$sum_per_day < 0.1]
outliers <- feats12$file[feats12$sum < 100 & feats12$sum_per_day < 0.1]
feats12$sum_per_day[feats12$file == outliers]
outliers <- feats12$file[feats12$sum < 200 & feats12$sum_per_day < 0.1]
feats12$file[feats12$sum < 200 & feats12$sum_per_day < 0.1]
feats12$file[feats12$sum < 300 & feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 0.2]
which(feats12$file[feats12$sum_per_day < 0.2])
which(feats12$sum_per_day < 0.2)
feats12$file[feats12$sum_per_day < 0.5]
feats12$sum[feats12$file = "b34f654bc10e798073df9946ad96331e"]
feats12$sum[feats12$file == "b34f654bc10e798073df9946ad96331e"]
feats12$sum_per_day[feats12$file == "b34f654bc10e798073df9946ad96331e"]
feats12$file[feats12$sum_per_day < 0.5]
median(feats12$sum_per_day)
mean(feats12$sum_per_day)
max(feats12$sum_per_day)
feats12$file[feats12$sum_per_day < 0.5]
feats12$file[feats12$sum_per_day > 50 & feats12$is_household]
feats12$file[feats12$sum_per_day > 100 & feats12$is_household]
feats12$file[feats12$sum_per_day > 100 & feats12$is_household == 1]
feats12$file[feats12$sum_per_day < 0.5]
feats12$file[feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 1]
feats12$file[feats12$sum_per_day > 8.5 & feats12$sum_per_day < 9.5]
feats12$file[feats12$sum_per_day < 1]
which(feats12$file == feats12$file[feats12$sum_per_day < 1])
feats12$file == feats12$file[feats12$sum_per_day < 1]
feats12$file[feats12$sum_per_day < 1]
quantile(feats12$sum_per_day)
quantile(feats12$sum_per_day,probs = seq(0,100,0.05)
)
quantile(feats12$sum_per_day,probs = seq(0,1,0.05))
feats12$file[feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 0.5]
feats12$file[feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 0.2]
feats12$file[feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 0.1]
feats12$file[feats12$sum_per_day < 0.25]
feats12$file[feats12$sum_per_day < 0.5]
feats12$file[feats12$sum_per_day < 0.5]
feats12$file[feats12$sum_per_day < 0.1]
170/11000
